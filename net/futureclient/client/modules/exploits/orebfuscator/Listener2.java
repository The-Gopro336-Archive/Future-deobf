package net.futureclient.client.modules.exploits.orebfuscator;

import net.futureclient.client.events.Event;
import java.util.Iterator;
import org.lwjgl.opengl.GL11;
import net.futureclient.client.WG;
import net.minecraft.util.math.AxisAlignedBB;
import net.futureclient.client.xG;
import net.futureclient.loader.mixin.common.render.wrapper.IRenderManager;
import net.minecraft.util.math.BlockPos;
import java.awt.Color;
import net.futureclient.client.pg;
import net.futureclient.client.ye;
import net.futureclient.client.events.EventType;
import net.futureclient.client.events.EventRender;
import net.futureclient.client.modules.exploits.Orebfuscator;
import net.futureclient.client.KD;
import net.futureclient.client.n;

public class Listener2 extends n<KD>
{
    public final Orebfuscator k;
    
    public Listener2(final Orebfuscator k) {
        this.k = k;
        super();
    }
    
    public void M(final EventRender eventRender) {
        if (!eventRender.getType().equals(EventType.PRE)) {
            return;
        }
        if (Orebfuscator.M(this.k).M()) {
            final ye ye = (ye)pg.M().M().M((Class)ye.class);
            final Color color = new Color(ye.L.getRed() / 255.0f, ye.L.getGreen() / 255.0f, ye.L.getBlue() / 255.0f, 0.6f);
            Listener2 listener2;
            if (Orebfuscator.M(this.k).size() > 1000) {
                listener2 = this;
                Orebfuscator.M(this.k).clear();
            }
            else {
                final Iterator<BlockPos> iterator = (Iterator<BlockPos>)Orebfuscator.M(this.k).iterator();
                while (iterator.hasNext()) {
                    final BlockPos blockPos;
                    final double n = (blockPos = iterator.next()).getX() - ((IRenderManager)Orebfuscator.getMinecraft1().getRenderManager()).getRenderPosX();
                    final double n2 = blockPos.getY() - ((IRenderManager)Orebfuscator.getMinecraft4().getRenderManager()).getRenderPosY();
                    final double n3 = blockPos.getZ() - ((IRenderManager)Orebfuscator.getMinecraft8().getRenderManager()).getRenderPosZ();
                    if (Orebfuscator.getMinecraft6().player.getDistance((double)blockPos.getX(), (double)blockPos.getY(), (double)blockPos.getZ()) <= 0.0) {
                        xG.B();
                        WG.M(new AxisAlignedBB(n, n2, n3, n + 1.0, n2 + 1.0, n3 + 1.0), 1.0f, color);
                        xG.C();
                    }
                }
                listener2 = this;
            }
            if (Orebfuscator.b(listener2.k) >= 0) {
                final BlockPos blockPos2;
                final double n4 = (blockPos2 = Orebfuscator.e(this.k).get(Orebfuscator.b(this.k))).getX() - ((IRenderManager)Orebfuscator.getMinecraft17().getRenderManager()).getRenderPosX();
                final double n5 = blockPos2.getY() - ((IRenderManager)Orebfuscator.getMinecraft5().getRenderManager()).getRenderPosY();
                final double n6 = blockPos2.getZ() - ((IRenderManager)Orebfuscator.getMinecraft9().getRenderManager()).getRenderPosZ();
                if (Orebfuscator.getMinecraft18().player.getDistance((double)blockPos2.getX(), (double)blockPos2.getY(), (double)blockPos2.getZ()) <= 0.0) {
                    xG.B();
                    WG.M(new AxisAlignedBB(n4, n5, n6, n4 + 1.0, n5 + 1.0, n6 + 1.0), 1.0f, color);
                    xG.C();
                }
                final float n7 = 1.0f;
                final int n8 = 1;
                final int n9 = 1;
                GL11.glColor4f(n7, (float)n9, (float)n8, (float)n9);
            }
        }
    }
    
    public void M(final Event event) {
        this.M((EventRender)event);
    }
}
